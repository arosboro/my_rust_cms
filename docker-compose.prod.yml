version: '3.8'

# Production overrides for docker-compose.yml
services:
  postgres:
    # Use a more specific version for production
    image: postgres:15.4-alpine
    # Remove port mapping for security (only accessible from web service)
    ports: []
    # Production-optimized configuration
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      # Performance tuning
      POSTGRES_SHARED_PRELOAD_LIBRARIES: pg_stat_statements
    command: >
      postgres
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
    # Production volume with backup location
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups

  web:
    # Production environment variables
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - RUST_LOG=warn
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - SESSION_SECRET=${SESSION_SECRET}
      # Email configuration
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FROM_EMAIL=${FROM_EMAIL}
      # URLs
      - FRONTEND_URL=${FRONTEND_URL}
      - BACKEND_URL=${BACKEND_URL}
    # Resource limits for production
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    # Production restart policy
    restart: always
    # Security: run with read-only root filesystem
    read_only: true
    tmpfs:
      - /tmp
      - /var/run
    # Only mount uploads as writable
    volumes:
      - ./uploads:/app/uploads
    # Production health check with shorter intervals
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Remove adminer in production for security
  adminer:
    profiles:
      - dev-only

# Production network configuration
networks:
  rustcms-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: rustcms-prod
